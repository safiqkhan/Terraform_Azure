stages:
  - choose_operation
  - execute_operation
variables:
  OPERATION:
    value: "read" # Default operation, can be overridden
    options:
      - "create"
      - "read"
      - "update"
      - "delete"
      - "drop"
    description: "Enter Execution policy"
  var_group:
    value: "Group"
    description: "Enter Variable Group Name"
  variable:
    value: "Location"
    description: "Enter Variable Name"
  value:
    value: "Pune"
    description: "Enter Value Value"
  secret:
    value: "false"
    options:
      - "false"
      - "true"
    description: "Is Secret"

choose_operation:
  stage: choose_operation
  script:
    - echo "Selected operation $OPERATION"
  only:
    - main
execute_operation:
  stage: execute_operation
  script:
    - |
      az config set extension.use_dynamic_install=yes_without_prompt
      az devops configure -d organization=https://dev.azure.com/safiquddinkhan project=onestop
      export AZURE_DEVOPS_EXT_PAT="${AccessToken}" 
      group_id=$(az pipelines variable-group list --query "[?name=='${var_group}'].id" --output tsv)
      if [ "$OPERATION" == "create" ]; then
        if [ -z "$group_id" ]; then
          echo "az pipelines variable-group create --authorize false --name ${var_group} --description 'Variables for my Variable group' --variables ${variable}=${value} --output yaml"
          az pipelines variable-group create --authorize false --name ${var_group} --description "Variables for my Variable group" --variables ${variable}=${value} --output yaml
        else
          echo "z pipelines variable-group variable create --group-id ${group_id} --name ${variable} --value ${value} --secret ${secret} --output table"
          az pipelines variable-group variable create --group-id ${group_id} --name ${variable} --value ${value} --secret ${secret} --output table
        fi
      elif [ "$OPERATION" == "read" ]; then
        echo "group id= ${group_id}"
        az pipelines variable-group list --top 3 --query-order Asc --output table
        data=$(az pipelines variable-group show --group-id ${group_id} \
        --output json | jq -cr .variables.${variable}.value)
        echo "az pipelines variable-group show --group-id ${group_id} --output json"
        echo -e ${var_group} "Conatins Variable name-"${variable} "with value is \n " $data
      elif [ "$OPERATION" == "update" ]; then
        echo "az pipelines variable-group variable update --group-id ${group_id} --name ${variable} --value ${value} --secret ${secret} --output yaml"
        az pipelines variable-group variable update --group-id ${group_id} --name ${variable} --value ${value} --secret ${secret} --output yaml
      elif [ "$OPERATION" == "delete" ]; then
        echo "az pipelines variable-group variable delete --group-id ${group_id} --name ${variable} --yes"
        az pipelines variable-group variable delete --group-id ${group_id} --name ${variable} --yes
      elif [ "$OPERATION" == "drop" ]; then
        echo "az pipelines variable-group delete --group-id ${group_id} --yes"
        az pipelines variable-group delete --group-id ${group_id} --yes
      else
        echo "Invalid operation selected" 
        exit 1
      fi
      az devops logout || echo "az devops logout unsuccessful"
  only:
    - main
  needs: # previous stage to succeed before it can run.
    - job: choose_operation 
