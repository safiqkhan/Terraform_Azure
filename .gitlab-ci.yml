stages:
  - setup
  - tfvalidate
  - tfplan
  - tfdeploy
  - tfdestroy

variables:
  TF_VAR_EXECLEVEL:
    value: "plan" # Default operation, can be overridden
    options:
      - "plan"
      - "apply"
      - "destroy"
    description: "Enter Execution policy"  # Default operation, can be overridden
  TF_VAR_PLATFORM: 
    value: "linux"
    description: "Enter Platform"
  TF_VAR_RG_NAME:
    value: "Test"
    description: "Enter Resource Group"
  TF_VAR_BE_RG_NAME: 
    value: "Backend"
    description: "Enter Backedn Resource Group"
  TF_VAR_BE_STORAGE_ACCOUNT: 
    value: "safiqstorageacc"
    description: "Enter Backedn Storage account name"

setup_backend:
  stage: setup
  script:
    # - cd backend
    - terraform --version
    - terraform init
    - terraform validate
    - terraform plan -out=backend.tfplan
    - terraform import 
      azurerm_resource_group.rg
      "/subscriptions/3bc9efe9-3af6-45ac-93a2-a2901d8838ae/resourceGroups/${TF_VAR_BE_RG_NAME}-rg"
    - terraform apply
      -var="resource_group_name=${TF_VAR_BE_RG_NAME}"
      -var="storage_account_name=${TF_VAR_BE_STORAGE_ACCOUNT}" --auto-approve
    # - terraform init -backend-config="./backend.tfbackend
  allow_failure: true
  artifacts:
    paths:
      - .terraform/
      - terraform.tfstate

tfvalidate:
  stage: tfvalidate
  script:
    - terraform init
    - terraform validate 
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "plan"

tfplan:
  stage: tfplan
  script:
    # - !reference [setup_backend, script]
    - terraform init 
     -backend-config="resource_group_name=${TF_VAR_BE_RG_NAME}" 
     -backend-config="storage_account_name=${TF_VAR_BE_STORAGE_ACCOUNT}"
    - terraform plan
      --target=module.${TF_VAR_PLATFORM}_vm
      -var="resource_group_name=${TF_VAR_RG_NAME}"
      -out=terraform.tfplan
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "plan"
  artifacts:
    paths:
      - terraform.tfplan
  needs:
    - job: tfvalidate

tfdeploy:
  stage: tfdeploy
  script:
    - terraform init 
     -backend-config="resource_group_name=${TF_VAR_BE_RG_NAME}" 
     -backend-config="storage_account_name=${TF_VAR_BE_STORAGE_ACCOUNT}"
    - terraform import
      azurerm_resource_group.rg
      "/subscriptions/3bc9efe9-3af6-45ac-93a2-a2901d8838ae/resourceGroups/${TF_VAR_RG_NAME}-rg"
    - terraform apply
      --target=module.${TF_VAR_PLATFORM}_vm
      -var="resource_group_name=${TF_VAR_RG_NAME}"
      --auto-approve
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "apply"

tfdestroy:
  stage: tfdestroy
  script:
    - terraform init -backend-config="resource_group_name=${TF_VAR_BE_RG_NAME}" -backend-config="storage_account_name=${TF_VAR_BE_STORAGE_ACCOUNT}"
    - terraform destroy --target=module.${TF_VAR_PLATFORM}_vm --auto-approve
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "destroy"
