stages:
  - setup
  - tfvalidate
  - tfplan
  - tfdeploy
  - tfdestroy

variables:
    EXECLEVEL:
        value: "apply" # Default operation, can be overridden
        options:
         - "setup"
         - "plan"
         - "apply"
         - "destroy"
        description: "Enter Execution policy"  # Default operation, can be overridden
    PLATFORM: 
        value: "linux"
        description: "Enter Platform"
    RG_NAME:
        value: "Dev"
        description: "Enter Resource Group"
    location:
        value: "east us"
        description: "Enter Resource Group Location"
    BE_RG_NAME: 
        value: "iac"
        description: "Enter Backedn Resource Group"
    BE_STORAGE_ACCOUNT: 
        value: "safiqstorageacc"
        description: "Enter Backend Storage account name"

setup_backend:
  stage: setup
  script:
    # - sudo apt-get update -y
    # - sudo apt-get install -y curl
    # - sudo curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    # - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    # - sudo apt-get update -y
    # - sudo apt-get install -y terraform
    - az login --service-principal
      -u ${AZURE_APP_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
    - az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    - terraform --version
    - cd backend
    - terraform init
    - terraform validate
    - terraform import 
      azurerm_resource_group.rg
      "/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${BE_RG_NAME}-rg" || true
    - terraform import
      azurerm_storage_account.tfstate 
      "/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${BE_RG_NAME}-rg/providers/Microsoft.Storage/storageAccounts/${BE_STORAGE_ACCOUNT}" || true
    - terraform import
      azurerm_storage_container.tfstate 
      "https://${BE_STORAGE_ACCOUNT}.blob.core.windows.net/tfstate" || true
    - terraform plan 
      -var="resource_group_name=${BE_RG_NAME}-rg" 
      -var="location=${location}" -var="storage_account_name=${BE_STORAGE_ACCOUNT}" 
      -out=backend.tfplan
    - terraform apply backend.tfplan
  only:
    variables:
      - $EXECLEVEL == "setup"
  allow_failure: true

tfvalidate:
  stage: tfvalidate
  script:
    - az login --service-principal
      -u ${AZURE_APP_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
    - az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    - terraform init 
      -backend-config="storage_account_name=${BE_STORAGE_ACCOUNT}"
      -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"
      -backend-config="resource_group_name=${BE_RG_NAME}-rg"
      -backend-config="subscription_id=${AZURE_SUBSCRIPTION_ID}"
      -backend-config="tenant_id=${AZURE_TENANT_ID}"
      -backend-config="client_id=${AZURE_APP_ID}"
      -backend-config="client_secret=${AZURE_CLIENT_SECRET}"
    - terraform validate 
  only:
    variables:
      - $EXECLEVEL == "plan"
  needs:
    - job: setup_backend
tfplan:
  stage: tfplan
  script:
    # - !reference [setup_backend, script]
    # - terraform init -backend-config="./backend.tfbackend
    az login --service-principal
    -u ${AZURE_APP_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
    az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    - terraform init 
      -backend-config="storage_account_name=${BE_STORAGE_ACCOUNT}"
      -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"
      -backend-config="resource_group_name=${BE_RG_NAME}-rg"
      -backend-config="subscription_id=${AZURE_SUBSCRIPTION_ID}"
      -backend-config="tenant_id=${AZURE_TENANT_ID}"
      -backend-config="client_id=${AZURE_APP_ID}"
      -backend-config="client_secret=${AZURE_CLIENT_SECRET}"
    - terraform plan
      --target=module.${PLATFORM}_vm
      -var="resource_group_name=${RG_NAME}"
      -var="location=$(location}
      -out=terraform.tfplan
  artifacts:
    paths:
      - terraform.tfplan
  only:
    variables:
      - $EXECLEVEL == "plan"

tfdeploy:
  stage: tfdeploy
  timeout: 16m
  script:
    - az login --service-principal
      -u ${AZURE_APP_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
    - az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    - terraform init 
      -backend-config="storage_account_name=${BE_STORAGE_ACCOUNT}"
      -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"
      -backend-config="resource_group_name=${BE_RG_NAME}-rg"
      -backend-config="subscription_id=${AZURE_SUBSCRIPTION_ID}"
      -backend-config="tenant_id=${AZURE_TENANT_ID}"
      -backend-config="client_id=${AZURE_APP_ID}"
      -backend-config="client_secret=${AZURE_CLIENT_SECRET}"
    - terraform import
      azurerm_resource_group.rg
      "/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${RG_NAME}-rg" || true
    - terraform apply
      --target=module.${PLATFORM}_vm
      -var="resource_group_name=${RG_NAME}"
      -var="location=${location}"
      --auto-approve
  only:
    variables:
      - $EXECLEVEL == "apply"
  artifacts:
    paths:
      - "*.pem"

tfdestroy:
  stage: tfdestroy
  timeout: 7m
  script:
    - az login --service-principal
      -u ${AZURE_APP_ID} -p ${AZURE_CLIENT_SECRET} --tenant ${AZURE_TENANT_ID}
    - az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    - terraform init 
      -backend-config="storage_account_name=${BE_STORAGE_ACCOUNT}"
      -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"
      -backend-config="resource_group_name=${BE_RG_NAME}-rg"
      -backend-config="subscription_id=${AZURE_SUBSCRIPTION_ID}"
      -backend-config="tenant_id=${AZURE_TENANT_ID}"
      -backend-config="client_id=${AZURE_APP_ID}"
      -backend-config="client_secret=${AZURE_CLIENT_SECRET}"
      - terraform destroy --auto-approve
    # - terraform destroy --target=module.${PLATFORM}_vm --auto-approve

  only:
    variables:
      - $EXECLEVEL == "destroy"
