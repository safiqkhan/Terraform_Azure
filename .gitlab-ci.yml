stages:
  - setup
  - tfvalidate
  - tfplan
  - tfdeploy
  - tfdestroy

variables:
  TF_VAR_EXECLEVEL: "plan" # Default operation, can be overridden
    options:
      - "plan"
      - "apply"
      - "destroy"
    description: "Enter Execution policy"
  TF_VAR_PLATFORM: "linux"
  TF_VAR_BACKEND_SERVICE_ARM: "Free_Trial"
  TF_VAR_BACKEND_RG_NAME: "Test-rg"  # Replace with your variable
  TF_VAR_BACKEND_STORAGE_ACCOUNT: "safiqstoracc"  # Replace with your uniq storage account variable
  TF_VAR_RESOURCE_GROUP_NAME: "Test-rg"  # Replace with your variable

setup_deploy:
  stage: setup
  script:
    # - apt-get update
    # - apt-get install -y curl
    # - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    # - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    # - apt-get update
    # - apt-get install -y terraform
    - terraform --version
    - terraform init
    # - terraform init -backend-config="./backend.tfbackend
  artifacts:
    paths:
      - .terraform/
      - terraform.tfstate

tfvalidate:
  extends: setup_deploy
  stage: tfvalidate
  script:
    - terraform validate
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "plan"

tfplan:
  extends: setup_deploy
  stage: tfplan
  script:
    # - !reference [.setup_deploy, script]
    - terraform plan -target=module.${TF_VAR_PLATFORM}_vm \
      -var resource_group_name=$ {TF_VAR_RESOURCE_GROUP_NAME} -out=terraform.tfplan
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "plan"
  artifacts:
    paths:
      - terraform.tfplan
  needs:
    - job: tfvalidate

tfdeploy:
  extends: setup_deploy
  stage: tfdeploy
  script:
    - terraform apply -target=module.${TF_VAR_PLATFORM}_vm -var resource_group_name=${TF_VAR_RESOURCE_GROUP_NAME}
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "apply"

tfdestroy:
  extends: setup_deploy
  stage: tfdestroy
  script:
    - terraform destroy -target=module.${TF_VAR_PLATFORM}_vm
  only:
    variables:
      - $TF_VAR_EXECLEVEL == "destroy"
