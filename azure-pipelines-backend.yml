# pool:
#   name: Default
#   Demands:
#   - agent.name -equals sfq_win
pool:
  vmImage: ubuntu-latest
trigger:
  branches:
    include:
      - main
variables:
- group: Terraform_Variable
resources:
 repositories:
   - repository: githubrepo
     type: github
     name: safiqkhan/Terraform_Azure
     endpoint: github_safiqkhan
     ref: master
     trigger: 
       - master
parameters:
 - name: execlevel
   displayName: Execution Level
   type: string
   default: plan
   values:
     - plan
     - apply
stages:
  - stage: tfvalidate
    condition: eq ('${{parameters.execlevel}}' , 'plan')
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - checkout: githubrepo
          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@0
            displayName: 'Initialise Terraform'
            inputs:
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory)/backend'
          - task: TerraformCLI@0
            displayName: 'Validate Terraform'
            inputs:
              command: 'validate'
              workingDirectory: '$(Build.SourcesDirectory)/backend'
          - task: TerraformCLI@0
            displayName: 'Plan Terraform'
            inputs:
              command: 'plan'
              environmentServiceName: 'Free_Trial'
              workingDirectory: '$(Build.SourcesDirectory)/backend'
              commandOptions: '-var resource_group_name=$(storage_rg_name) -var storage_account_name=$(storage_account_name)'
              publishPlanResults: 'Terraform_plan'
          # - task: CmdLine@2
          #   inputs:
          #     script: 'cp -r !(folder_to_skip) $(Build.ArtifactStagingDirectory)'
          #     workingDirectory: '$(Build.SourcesDirectory)'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: '**azure-pipelines-backend.yml'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'Terraform'

  - stage: tfdeploy
    condition: eq ('${{parameters.execlevel}}' , 'apply')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - checkout: githubrepo
          - task: TerraformCLI@0
            displayName: 'Initialise Terraform'
            inputs:
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory)/backend'
          - task: TerraformCLI@0
            displayName: 'Apply Terraform'
            inputs:
              command: 'apply'
              environmentServiceName: 'Free_Trial'
              workingDirectory: '$(Build.SourcesDirectory)/backend'
              commandOptions: '-var resource_group_name=$(storage_rg_name) -var storage_account_name=$(storage_account_name)'

          
          
